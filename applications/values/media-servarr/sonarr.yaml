# Default library values
nameOverride: ''
fullnameOverride: ''

#
# Secrets to create
#
secrets:
- name: 'apiKey'
  value: 'wYVrR766XAzLLPrJtPYS8hQ4WCLbItXM'

#
# Application Config
#
application:
  # Main application web UI port
  port: 8989
  # Access url base
  urlBase: 'sonarr'
  # ConfigMap for core application settings
  config:
    # Filename of configuration
    filename: 'config.xml'
    # Configuration file contents
    contents: |
      <Config>
          <LogLevel>info</LogLevel>
          <EnableSsl>False</EnableSsl>
          <Port>8989</Port>
          <UrlBase>sonarr</UrlBase>
          <BindAddress>*</BindAddress>
          <ApiKey>$apiKey</ApiKey>
          <AnalyticsEnabled>False</AnalyticsEnabled>
          <AuthenticationMethod>External</AuthenticationMethod>
          <UpdateMechanism>Docker</UpdateMechanism>
          <Branch>main</Branch>
          <InstanceName>Sonarr</InstanceName>
        </Config>
    # Secrets to inject - if any - to the config. In the config they must be defined as $secret
    secrets: [ 'apiKey' ]
    # Path the file will be mounted to in the config
    mountPath: '/config/config.xml'

#
# Resource - DEPLOYMENT
# This is to set up and define the application deployment
#
deployment:
  container:
    image:
      repository: 'lscr.io/linuxserver/sonarr'

    env:
    - name: 'PGID'
      value: '1000'
    - name: 'PUID'
      value: '1000'
    # Additional volumeMounts on the output Deployment definition.
    volumeMounts:
    - name: 'config'
      mountPath: '/config'
    - name: 'downloads'
      mountPath: '/downloads'
    - name: 'tv'
      mountPath: '/tv'

  volumes:
    config:
      persistentVolumeClaim:
        claimName: 'sonarr-config'
    downloads:
      persistentVolumeClaim:
        claimName: 'sonarr-downloads'
    tv:
      persistentVolumeClaim:
        claimName: 'sonarr-tv'

persistentVolumeClaims:
  sonarr-config:
    accessMode: 'ReadWriteOnce'
    requestStorage: '1Gi'
    selector: {}
  sonarr-downloads:
    accessMode: 'ReadWriteOnce'
    requestStorage: '10Gi'
  sonarr-tv:
    accessMode: 'ReadWriteOnce'
    requestStorage: '1Gi'

ingress:
  enabled: true
  className: 'nginx'
  tls:
    hosts:
    - "sonarr.katedra.cc"
    - "sonarr.katedra.kys"
    secretName: 'wildcard-katedra-tls'

metrics:
  enabled: true
  app: 'sonarr'
  port:
    number: 9706
